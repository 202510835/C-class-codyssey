#include <stdio.h>
#include <stdlib.h>

#define MAX 6
#define BUF 256

// 후보자 정보 항목 이름
char *member_info[11] = {
    "성명", "생일", "성별", "메일", "국적", "BMI", "주스킬", "보조스킬", "TOPIK", "MBTI", "소개"
};

// 각 후보자의 정보를 저장할 배열
char candidate01[11][BUF], candidate02[11][BUF], candidate03[11][BUF];
char candidate04[11][BUF], candidate05[11][BUF], candidate06[11][BUF];

// 후보자 배열들을 포인터 배열로 관리
char (*candidates[6])[11][BUF] = {
    &candidate01, &candidate02, &candidate03,
    &candidate04, &candidate05, &candidate06
};

// 그룹명 저장
char group_name[BUF];

// 현재 날짜 기준 (만 나이 계산용)
int current_year = 2025, current_month = 4, current_day = 16;

// 문자열 생일 (YYYYMMDD) -> 만 나이 계산
int calculate_age(char *birth) {
    int byear, bmonth, bday;
    sscanf(birth, "%4d%2d%2d", &byear, &bmonth, &bday);

    int age = current_year - byear;
    if (current_month < bmonth || (current_month == bmonth && current_day < bday)) {
        age--;
    }
    return age;
}

int main() {
    int i, j;
    int ch;

    // 그룹명 입력 (getchar 사용)
    printf("지원하는 오디션 그룹명을 입력하세요: ");
    i = 0;
    while ((ch = getchar()) != '\n' && ch != EOF && i < BUF - 1) {
        group_name[i++] = ch;
    }
    group_name[i] = '\0';

    printf("\n####################################\n");
    printf("[%s] 오디션 후보자 데이터 입력\n", group_name);
    printf("####################################\n");

    i = 0;
    while (i < MAX) {
        printf("첫 번째 후보자의 정보를 입력합니다.\n");
        printf("---------------------------------\n");

        printf("1. 성명: ");
        fgets((*candidates[i])[0], BUF, stdin);
        (*candidates[i])[0][strcspn((*candidates[i])[0], "\n")] = '\0';

        printf("2. 생일(YYYY/MM/DD 형식): ");
        fgets((*candidates[i])[1], BUF, stdin);
        (*candidates[i])[1][strcspn((*candidates[i])[1], "\n")] = '\0';
        // 생일에서 '/' 제거하고 YYYYMMDD로 변환
        char temp_date[9];
        int y, m, d;
        sscanf((*candidates[i])[1], "%d/%d/%d", &y, &m, &d);
        sprintf((*candidates[i])[1], "%04d%02d%02d", y, m, d);

        printf("3. 성별(여성이면 F 또는 남성이면 M): ");
        fgets((*candidates[i])[2], BUF, stdin);
        (*candidates[i])[2][strcspn((*candidates[i])[2], "\n")] = '\0';

        printf("4. 메일 주소: ");
        fgets((*candidates[i])[3], BUF, stdin);
        (*candidates[i])[3][strcspn((*candidates[i])[3], "\n")] = '\0';

        printf("5. 국적: ");
        fgets((*candidates[i])[4], BUF, stdin);
        (*candidates[i])[4][strcspn((*candidates[i])[4], "\n")] = '\0';

        printf("6. BMI: ");
        fgets((*candidates[i])[5], BUF, stdin);
        (*candidates[i])[5][strcspn((*candidates[i])[5], "\n")] = '\0';

        printf("7. 주 스킬: ");
        fgets((*candidates[i])[6], BUF, stdin);
        (*candidates[i])[6][strcspn((*candidates[i])[6], "\n")] = '\0';

        printf("8. 보조 스킬: ");
        fgets((*candidates[i])[7], BUF, stdin);
        (*candidates[i])[7][strcspn((*candidates[i])[7], "\n")] = '\0';

        printf("9. 한국어 등급(TOPIK): ");
        fgets((*candidates[i])[8], BUF, stdin);
        (*candidates[i])[8][strcspn((*candidates[i])[8], "\n")] = '\0';

        printf("10. MBTI: ");
        fgets((*candidates[i])[9], BUF, stdin);
        (*candidates[i])[9][strcspn((*candidates[i])[9], "\n")] = '\0';

        printf("11. 소개: ");
        fgets((*candidates[i])[10], BUF, stdin);
        (*candidates[i])[10][strcspn((*candidates[i])[10], "\n")] = '\0';

        i++;
        if (i < MAX) {
            printf("=================================\n");
            printf("%d번째 후보자를 입력합니다.\n", i + 1);
            printf("---------------------------------\n");
        }
    }

    // 출력
    printf("\n####################################\n");
    printf("[%s] 오디션 후보자 데이터 조회\n", group_name);
    printf("####################################\n");
    printf("=============================================================================================\n");
    printf("성   명 | 생   일 | 성별 | 메   일            | 국적 | BMI | 주스킬 | 보조스킬 | TOPIK | MBTI |\n");
    printf("=============================================================================================\n");

    for (i = 0; i < MAX; i++) {
        int age = calculate_age((*candidates[i])[1]);
        char *topik_level;
        if (atoi((*candidates[i])[8]) == 0) topik_level = "원어민";
        else sprintf((*candidates[i])[8], "%s", (*candidates[i])[8]);

        printf("%s(%d) |%s | %s   | %-18s |%-4s | %-4s | %-6s | %-8s | %-6s | %-4s |\n",
               (*candidates[i])[0], age,
               (*candidates[i])[1],
               (*candidates[i])[2][0] == 'F' ? "여" : "남",
               (*candidates[i])[3],
               (*candidates[i])[4],
               (*candidates[i])[5],
               (*candidates[i])[6],
               (*candidates[i])[7],
               atoi((*candidates[i])[8]) == 0 ? "원어민" : (*candidates[i])[8],
               (*candidates[i])[9]);

        printf("---------------------------------------------------------------------------------------------\n");
        printf("%s\n", (*candidates[i])[10]);
        printf("---------------------------------------------------------------------------------------------\n");
    }

    return 0;
}
